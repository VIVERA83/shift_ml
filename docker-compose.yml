services:

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - redis_volume:/data
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    restart: unless-stopped

  postgres:
    restart: always
    container_name: postgres
    image: postgres:latest
    volumes:
      - postgres_volume:/var/lib/postgresql/data/
    env_file:
      - .env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -V" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: -p ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
  app:
    build: .
    ports:
      - ${PORT}:${PORT}
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  migrations:
    build:
      context: .
      dockerfile: Dockerfile_migrations
    env_file:
      - .env
    depends_on:
      - postgres
    command: alembic upgrade head

volumes:
  redis_volume:
  postgres_volume: